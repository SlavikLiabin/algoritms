function jumpSearch(arr, target) {
  // Размер шага (округляем, так как индексы должны быть целыми числами)
  // Нестрашно, что мы делим массив на целые части — просто последняя
  // часть будет чуть больше или чуть меньше остальных.
  const step = Math.round(Math.sqrt(arr.length));
  // Сохраняем индекс предыдущего проверенного элемента
  let prev = 0;
  // Индекс текущего элемента
  let current = 0;
  // Идём по массиву, пока не «перепрыгнем» искомый элемент/пока не найдём его/пока не достигнем конца массива.
  while (current < arr.length && arr[current] < target) {
    // Сохраняем предыдущий шаг
    prev = current;
    // шагаем
    current += step;
  }

  // Нашли искомый элемент
  if (arr[current] === target) {
    return true;
  }

  // Выполняем линейный поиск, начиная с элемента, следующего за последним проверенным элементом, и заканчивая текущим проверенным элементом или концом массива.
  const start = prev + 1;
  const end = current;
  // Можно сделать небольшую оптимизацию и не проверять остальные элементы,
  // если текущий элемент уже больше искомого, так как массив отсортированный
  // и остальные элементы точно не меньше текущего.
  for (let i = start; i < end && i < arr.length && arr[i] <= target; i++) {
    if (arr[i] === target) {
      // Нашли искомый элемент
      return true;
    }
  }

  // Не нашли искомый элемент
  return false;
}
